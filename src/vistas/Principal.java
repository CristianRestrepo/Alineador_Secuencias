package vistas;

import Lógica.Conversion;
import Lógica.Files;
import Lógica.Llenado;
import Lógica.MiRender;
import Lógica.objetos;
import java.io.*;
import java.util.ArrayList;
import java.util.Collections;
import javax.naming.event.EventContext;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author UDistrital
 */
public class Principal extends javax.swing.JFrame {

    JFileChooser selectFile = new JFileChooser();
    File file;
    Files gestor = new Files();

    Conversion c = new Conversion();
    Llenado l = new Llenado();

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }
    
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSequence = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSecuencia1 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtSecuencia2 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPuntaje = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTResultados = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMatriz = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnFile.setText("Abrir Secuencia");
        btnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(txtSequence);

        jButton1.setText("Alinear Secuencias");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(txtSecuencia1);

        jScrollPane4.setViewportView(txtSecuencia2);

        jLabel1.setText("Secuencia 1");

        jLabel2.setText("Secuencia 2");

        jLabel3.setText("Puntaje alineacion");

        txtPuntaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPuntajeActionPerformed(evt);
            }
        });

        jLabel4.setText("Secuencias Alineadas");

        jTResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(jTResultados);

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Cargar Matriz de valores");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });

        jScrollPane2.setViewportView(txtMatriz);

        jScrollPane8.setViewportView(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFile, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPuntaje)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 81, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPuntaje, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileActionPerformed
        // TODO add your handling code here:
        objetos.reiniciar();
        txtMatriz.setText("");
        txtPuntaje.setText("");
        txtSecuencia1.setText("");
        txtSecuencia2.setText("");

        if (selectFile.showDialog(this, "ABRIR ARCHIVO") == JFileChooser.APPROVE_OPTION) {
            file = selectFile.getSelectedFile();
            if (file.canRead()) {
                if (file.getName().endsWith("txt") || file.getName().endsWith("fasta")) {
                    String content = gestor.openFile(file);

                    txtSequence.setText(content);
                    txtSequence.disable();

                    //Recorremos String para separar las secuencias en diferentes Array
                    int i = 1;
                    String caracter = String.valueOf(content.charAt(1));
                    while (!caracter.equals(">") && i < content.length()) {
                        if (caracter.equals("A") || caracter.equals("G")
                                || caracter.equals("C") || caracter.equals("T")) {
                            objetos.secuencia1.add(c.transcribir(caracter));
                            i++;
                            if (i < content.length()) {
                                caracter = String.valueOf(content.charAt(i));
                            }
                        } else {
                            i++;
                            if (i < content.length()) {
                                caracter = String.valueOf(content.charAt(i));
                            }
                        }
                    }

                    i++;
                    caracter = String.valueOf(content.charAt(i));
                    while (!caracter.equals(">") && i < content.length()) {
                        if (caracter.equals("A") || caracter.equals("G")
                                || caracter.equals("C") || caracter.equals("T")) {
                            objetos.secuencia2.add(c.transcribir(caracter));
                            i++;
                            if (i < content.length()) {
                                caracter = String.valueOf(content.charAt(i));
                            }

                        } else {
                            i++;
                            if (i < content.length()) {
                                caracter = String.valueOf(content.charAt(i));
                            }
                        }
                    }

                    for (int j = 0; j < objetos.secuencia1.size(); j++) {
                        txtSecuencia1.setText(txtSecuencia1.getText() + objetos.secuencia1.get(j));
                    }

                    for (int j = 0; j < objetos.secuencia2.size(); j++) {
                        txtSecuencia2.setText(txtSecuencia2.getText() + objetos.secuencia2.get(j));
                    }
                }
            }
        }
    }//GEN-LAST:event_btnFileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        txtMatriz.setText("");
        txtPuntaje.setText("");
        jTResultados.setModel(new DefaultTableModel());
        objetos.secuenciaAlineada1 = new ArrayList<>();
        objetos.secuenciaAlineada2 = new ArrayList<>();
        
        int fila = objetos.secuencia2.size() + 1;
        int columna = objetos.secuencia1.size() + 1;
        //objetos.matrizResultante = new int[objetos.secuencia2.size() + 1][objetos.secuencia1.size()+1];
        objetos.matrizResultante = new int[fila][columna];
        l = new Llenado();
        l.llenarMatriz();

        if (jCheckBox1.isSelected()) {
            for (int i = 0; i < objetos.matrizResultante.length; i++) {
                for (int j = 0; j < objetos.matrizResultante[i].length; j++) {
                    txtMatriz.setText(txtMatriz.getText() + objetos.matrizResultante[i][j] + "\t");
                }
                txtMatriz.setText(txtMatriz.getText() + "\n");
            }
        }

        int valor = objetos.consultarValor(objetos.matrizResultante.length - 1, objetos.matrizResultante[0].length - 1);
        txtPuntaje.setText(txtPuntaje.getText() + valor);

        //Hacemos alineacion a la inversa
        l.recorrerMatrizInversa();
        
        ArrayList<String> lista = (ArrayList<String>)objetos.secuenciaAlineada1.clone();
        Collections.reverse(lista);
        ArrayList<String> lista2 = (ArrayList<String>)objetos.secuenciaAlineada2.clone();
        Collections.reverse(lista2);
        
        int filas = (lista.size()) / 80 + 1;
        filas *= 3;
        String[][] alineamiento = new String[filas][lista.size()];
        String[] titulos = new String[80];

        int row = 0;
        int cell = 0;
        for (int i = 0; i<lista.size(); ++i) {
            if (i != 0 && i % 80 == 0) {
                row += 3;
                cell = 0;
            }
            alineamiento[row][cell] = ("" + lista.get(i));
            alineamiento[(row + 1)][cell] = ("" + lista2.get(i));
            alineamiento[(row + 2)][cell] = " ";
            titulos[cell] = ("" + (cell + 1));
            ++cell;
        }
        this.jTResultados.setModel(new DefaultTableModel(alineamiento, titulos));
        this.jTResultados.setDefaultRenderer(Object.class, new MiRender(alineamiento, filas));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPuntajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPuntajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPuntajeActionPerformed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            txtMatriz.enable();
        } else {
            txtMatriz.disable();
        }
    }//GEN-LAST:event_jCheckBox1StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFile;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTResultados;
    private javax.swing.JTextPane txtMatriz;
    private javax.swing.JTextField txtPuntaje;
    private javax.swing.JTextPane txtSecuencia1;
    private javax.swing.JTextPane txtSecuencia2;
    private javax.swing.JTextPane txtSequence;
    // End of variables declaration//GEN-END:variables
}
